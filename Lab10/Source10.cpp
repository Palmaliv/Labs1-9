/***************************************************************************************
* Автор: Пушин Г.В.
* Группа: ИТ-11(2)
*
* Лабораторная работа № 10 (6)
* Вариант № 26
* Задание (6) : Коэффициенты многочлена (𝑎_𝑛)*𝑥^𝑛 + (𝑎_(𝑛−1))*𝑥^(𝑛−1) + ⋯ + (𝑎_1)*𝑥 + 𝑎_0 размещены
  в массиве 𝑎0, 𝑎1 … 𝑎𝑛−1, 𝑎𝑛. Дано вещественное число 𝑥. Найти значение многочлена для
  данного 𝑥. Указание: ввод коэффициентов осуществлять с клавиатуры, начиная со старшего
  коэффициента; операцию возведения в степень не использовать.

  Задание (10): Необходимо ту же задачу решить с помощью контейнера vector<>. При этом необходимо
  исключить использование вектора как массива, то есть:
	- для перебора элементов вектора использовать не перебор индексов, а перебор либо с помощью
	итератора, либо с помощью цикла типа for-eaсh;

	- обращение к каждому элементу производить не по индексу a*i+, а через разыменование итератора *it;
	в крайнем (и хорошо обоснованном!) случае допускается применять обращение по индексу, но только
	с помощью метода at().
  
  Программа должна быть представлена в виде набора функций, каждая из которых решает какую-то одну
  часть задачи (ввод, вывод, заполнение случайными, ключевая функция, функция main() и т.п.).
***************************************************************************************/


#include <iostream>
#include <locale.h>
#include <vector>


using Vector = std::vector<double>;


void solveTask();

void findPolynomialGorner(const Vector& coeffs, double x);

void test();


void main() {
	setlocale(LC_ALL, "Rus");

	// solveTask();
	test();
}


void solveTask() {
	double x;
	std::cout << "Введите значение x: ";
	std::cin >> x;

	int n;
	std::cout << "Введите n - количество элементов многочлена: ";
	std::cin >> n;

	Vector coeffs(n, 0);
	std::cout << "Введите коэффициенты многочлена начиная со старшего: " << std::endl;
	for (auto& coeff : coeffs) {
		std::cin >> coeff;
	}

	findPolynomialGorner(coeffs, x);
}


void findPolynomialGorner(const Vector& coeffs, double x) {
	double polynomial = coeffs.at(0);

	for (const auto& coeff : coeffs) {
		if (&coeff == &coeffs.at(0)) continue;
		polynomial = polynomial * x + coeff;
	}

	std::cout << "Значение многочлена (схема Горнера): " << polynomial << std::endl;
}


void test() {
	Vector x = { 2, 0.25, 0.4, 2.5, 1};

	std::vector<Vector> coeffs = {
		{4, 3, 2, 8, 7},
		{7.4, 1.5, 3, 4, 2.5},
		{5.3, 4.2, 3.1, 2, 1},
		{8, -12, -24, 11, 7},
		{1, 1, 1, 1, 1} };

	Vector polynomials = { 119, 3.73984375, 2.70048, 9.5, 5};

	for (size_t i = 0; i < x.size(); i++) {
		findPolynomialGorner(coeffs.at(i), x.at(i));

		std::cout << "Ожидаемый результат: " << polynomials.at(i) << std::endl;
		std::cout << std::endl;
	}
}